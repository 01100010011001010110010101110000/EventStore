<!doctype html>
<html>
<head>
    <title>View Projections</title>
    <script src="/web/es/lib/jquery/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="/web/es/lib/jsrender/jsrender.js" type="text/javascript"></script>
    <script src="/web/es/js/es.tmpl.js" type="text/javascript"></script>
    <script id="r-head">
        es.tmpl.renderHead();
    </script>
</head>
<body>
    <div id="content">
        <h1>
            View Projection</h1>
        <div class="row">
            <div class="span12">
                <div id="commands-container">
                    <ul style="display: inline;">
                        <li id="edit-source-btn-container"></li>
                        <li id="delete-projection-btn-container"></li>
                        <li style="display: none;" id="command-disable-container"><a href="#" id="command-disable">
                            <img src="/web/es/img/stop_btn.png" title="Disable" alt="Disable" /></a> </li>
                        <li style="display: none;" id="command-enable-container"><a href="#" id="command-enable">
                            <img src="/web/es/img/start_btn.png" title="Enable" alt="Enable" /></a> </li>
                    </ul>
                </div>
            </div>
        </div>
        <div id="projection-status">
        </div>
        <script id="projectionTemplate" type="text/x-jsrender">
                <div class="row">
                    <div class="span12">
                        <ul class="breadcrumb">
                            <li><strong> {{>name}}</strong> <span class="divider">/</span></li>
                            <li><strong>Mode:</strong> {{>mode}} <span class="divider">/</span></li>
                            <li><strong>Status:</strong> {{>status}} <span class="divider">/</span></li>
                        </ul>
                    </div>
                </div>
        </script>
        <h4>
            State</h4>
        <div class="row ">
            <div class="span12">
                <div class="well">
                    <div id="projection-state">
                    </div>
                    <div id="projection-statistics">
                    </div>
                </div>
            </div>
        </div>
        <script id="projectionTemplateStatistics" type="text/x-jsrender"> 
                <table class="table 1table-bordered 1table-striped table-thin">
                  <tbody>
                    <tr>
                        <td>Position: {{>position}}({{>progress}}%)</td>
                        <td>Last Checkpoint: {{>lastCheckpoint}}</td>
                        <td>Checkpoint Status: {{>checkpointStatus}}</td>
                    </tr>
                    <tr>
                        <td>Reads/Writes In-progress: {{>readsInProgress}}/{{>writesInProgress}}</td>
                        <td>Write Pending Events: {{>writePendingEventsBeforeCheckpoint}}\/{{>writePendingEventsAfterCheckpoint}}</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Partitions Cached: {{>partitionsCached}}</td>
                        <td>Events Processed (since restart): {{>eventsProcessedAfterRestart}}</td>
                        <td>Buffered Events: {{>bufferedEvents}}</td>
                    </tr>
                  </tbody>
                </table>
        </script>
        <div class="row">
            <div class="span12">
                <h4>
                    Source: <span id="edit-source-container"></span>
                </h4>
                <pre id="source" style="font-family: consolas, 'courier new';"></pre>
            </div>
        </div>
        <div class="row">
            <div class="span12" id="projection-reason">
            </div>
        </div>
        <script id="projectionTemplateReason" type="text/x-jsrender">
                
                <h4>Failure Reason:<h4>
                <div class="projection-reason-data">
                    <pre>{{>stateReason}}</pre>    
                </div>

        </script>
        <script id="editSourceTemplate" type="text/x-jsrender">
                <a href="{{>'edit-projection-source.htm#'+statusUrl}}" class="btn btn-success"><i class="icon-pencil"></i> Edit</a>
        </script>
        <script id="deleteProjectionTemplate" type="text/x-jsrender">
               <a href="{{>'delete-projection.htm#'+statusUrl}}" class="btn btn-danger"><i class="icon-remove"></i> Delete</a> 
        </script>
        <script id="r-body">
            es.tmpl.renderBody();
        </script>
    </div>
    <script type="text/javascript">

        (function() {

            var projectionStatusUrl = "";

            $(function() {
                $.templates("projectionTemplate", "#projectionTemplate");
                $.templates("projectionTemplateStatistics", "#projectionTemplateStatistics");
                $.templates("projectionTemplateReason", "#projectionTemplateReason");
                $.templates("editSourceTemplate", "#editSourceTemplate");
                $.templates("deleteProjectionTemplate", "#deleteProjectionTemplate");

                projectionStatusUrl = "/projection/" + getUrlParam('name');

                initialRequest();
                requestProjectionStats();
                requestProjectionState();
                requestProjectionSource();

                $('#command-disable').click(onDisable);
                $("#command-enable").click(onEnable);
                

                function onDisable(ev) {
                    ev.preventDefault();
                    
                    $.ajax(projectionStatusUrl + "/command/disable", {
                        headers: {
                            Accept: "application/json",
                        },
                        type: "POST",
                        success: successPostCommand,
                        error: function() { alert("Failed!"); }
                    });

                    return false;
                }

                function onEnable(ev) {
                    ev.preventDefault();

                    $.ajax(projectionStatusUrl + "/command/enable", {
                        headers: {
                            Accept: "application/json",
                        },
                        type: "POST",
                        success: successPostCommand,
                        error: function() { alert("Failed!"); }
                    });

                    return false;
                }
                
                function successPostCommand(data, status, xhr) {
                    $('#command-disable-container').toggle();
                    $('#command-enable-container').toggle();
                    //window.location = "view-projection.htm#" + projectionStatusUrl;
                }
            });
            
            function initialRequest() {
                 $.ajax(projectionStatusUrl + "/statistics", {
                    cache: false,
                    headers: {
                        Accept: "application/json",
                    },
                    success: success,
                    error: error
                });

                function success(data, status, xhr) {
                    var projection = data.projections[0];
                    document.title = projection.name + " - Projection Status";

                    if (projection.status === 'Running/Running') {
                        $('#command-disable-container').show();
                    } else {
                        $('#command-enable-container').show();
                    }

                    $("#edit-source-btn-container").html(
                        $.render.editSourceTemplate(projection)
                    );
                    $("#delete-projection-btn-container").html(
                        $.render.deleteProjectionTemplate(projection)
                    );
                }

                function error(xhr, status) {
                    delayedRequestProjection();
                }

                function delayedRequestProjection() {
                    setTimeout(requestProjectionStats, 1000);
                }
            }

            function requestProjectionStats() {
                $.ajax(projectionStatusUrl + "/statistics", {
                    cache: false,
                    headers: {
                        Accept: "application/json",
                    },
                    success: success,
                    error: error
                });

                function success(data, status, xhr) {
                    var projection = data.projections[0];
                    document.title = projection.name + " - Projection Status";

                    $("#projection-status").html(
                        $.render.projectionTemplate(projection)
                    );

                    $("#projection-statistics").html(
                        $.render.projectionTemplateStatistics(projection)
                    );

                    var html = projection.stateReason !== ''
                               ? $.render.projectionTemplateReason(projection)
                               : '';
                    $("#projection-reason").html(html);

                    $("#edit-source-container").html(
                        $.render.editSourceTemplate(projection)
                    );
                    delayedRequestProjection();
                }

                function error(xhr, status) {
                    delayedRequestProjection();
                }

                function delayedRequestProjection() {
                    setTimeout(requestProjectionStats, 1000);
                }
            }

            function requestProjectionState() {
                $.ajax(projectionStatusUrl + "/state", {
                    headers: {
                        Accept: "application/json",
                    },
                    success: successState,
                    error: errorState
                });

                function successState(data, status, xhr) {
                    if (data) {
                        $("#projection-state").text(JSON.stringify(data));
                    }
                    delayedRequestProjectionState();
                }

                function errorState(xhr, status) {
                    delayedRequestProjectionState();
                }

                function delayedRequestProjectionState() {
                    setTimeout(requestProjectionState, 1000);
                }

            }

            function requestProjectionSource() {
                $.ajax(projectionStatusUrl + "/query", {
                    headers: {
                        Accept: "text/plain",
                    },
                    dataType: "text",
                    success: successSource,
                    error: errorSource
                });

                function successSource(data, status, xhr) {
                    $("#source").text(data);
                    delayedRequestProjectionSource();
                }

                function errorSource(xhr, status) {
                    delayedRequestProjectionSource();
                }

                function delayedRequestProjectionSource() {
                    setTimeout(requestProjectionSource, 5000);
                }
            }
            
            function getUrlParam(name) {
                name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
                var regexS = "[\\?&]" + name + "=([^&#]*)";
                var regex = new RegExp(regexS);
                var results = regex.exec(window.location.search);
                if (results == null)
                    return "";
                else
                    return decodeURIComponent(results[1].replace(/\+/g, " "));
            };
            
        })();
    </script>
</body>
</html>
