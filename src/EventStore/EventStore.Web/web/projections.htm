<!doctype html>
<html>
<head>
    <title>Projections</title>
    <script src="/web/lib/jquery/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="/web/lib/jsrender/jsrender.js" type="text/javascript"></script>
    <script src="/web/js/es.tmpl.js" type="text/javascript"></script>
    <script id="r-head">
        es.tmpl.renderHead();
    </script>
    <style type="text/css">
		.content table { table-layout: fixed; }
        .content table .r { text-align: right; }
        .content table .c { text-align: center; }
        .content table thead th { vertical-align: middle; }
		
		.content table td { word-wrap: break-word; }
		.content table .name { width: 150px; }
		.content table .status { width: 125px; }
		.content table .mode { width: 70px; }
		.content table .progress { width: 50px; }
		.content table .position { width: 175px; }
		.content table .checkpoint { width: 175px; }
		.content table .checkpoint-status { width: 75px; }
		.content table .read-writes { width: 75px; }
		.content table .writes { width: 50px; }
		.content table .partitions { width: 50px; }
		.content table .processed { width: 75px; }
		.content table .buffered { width: 50px; }
    </style>
</head>
<body>
    <div id="content">
        <h1>
            Projections</h1>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th class="c name">
                        Name
                    </th>
                    <th class="c status">
                        Status
                    </th>
                    <th class="c mode">
                        Mode
                    </th>
                    <th class="c progress">
                        % Done
                    </th>
                    <th class="c position">
                        Position
                    </th>
                    <th class="c checkpoint">
                        Last Checkpoint
                    </th>
                    <th class="c checkpoint-status">
                        Checkpoint Status
                    </th>
                    <th class="c read-writes">
                        Reads/Writes In-Progress
                    </th>
                    <th class="c writes">
                        Writes Pending
                    </th>
                    <th class="c partitions">
                        Partitions Cached
                    </th>
                    <th class="c processed">
                        Processed (since restart)
                    </th>
                    <th class="c buffered">
                        Buffered Events
                    </th>
                </tr>
            </thead>
            <tbody id="projections">
            </tbody>
        </table>
        <script id="projectionTemplate" type="text/x-jsrender">
        <tr>
          <td class="name"><a href="view-projection.htm#{{>statusUrl}}">{{>name}}</a></td>
          <td>{{>status}}</td>
          <td>{{>mode}}</td>
          <td class="r">{{>progress.toFixed(1)}}%</td>
          <td class="r">{{>position}}</td>
          <td class="r">{{>lastCheckpoint}}</td>
          <td>{{>checkpointStatus}}</td>
          <td class="r">{{>readsInProgress}}/{{>writesInProgress}}</td>
          <td class="r">{{>writePendingEventsBeforeCheckpoint}}/{{>writePendingEventsAfterCheckpoint}}</td>
          <td class="r">{{>partitionsCached}}</td>
          <td class="r">{{>eventsProcessedAfterRestart}}</td>
          <td class="r">{{>bufferedEvents}}</td>
        </tr>
        </script>
        <div>
            <header>
                <a href="new-projection.htm">New Projection</a>
            </header>
        </div>
    </div>

    <script id="r-body">
        es.tmpl.renderBody();
    </script>

    <script type="text/javascript">

        (function() {

            function success(data, status, xhr) {

                data.projections.sort(function(a, b) {
                    return a.name.localeCompare(b.name);
                });

                /*$("#raw_data").text(JSON.stringify(data));*/
                $.templates("projectionTemplate", "#projectionTemplate");

                $("#projections").html(
                    $.render.projectionTemplate(data.projections, {})
                );

                delayedRequestList();
            }

            function error(xhr, status) {
                delayedRequestList();
            }

            function delayedRequestList() {
                setTimeout(requestList, 1000);
            }

            function requestList() {
                $.ajax("/projections/any", {
                    headers: {
                        Accept: "application/json",
                    },
                    success: success,
                    error: error
                });
            }

            $(function() {
                requestList();
            });

        })();
    </script>
</body>
</html>
