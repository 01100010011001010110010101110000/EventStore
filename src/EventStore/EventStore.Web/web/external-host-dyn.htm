<html>
<head />
<body>
    <div id="text">
        <h1>Log:</h1>
    </div>
    
    <script src="lib/jquery/jquery-1.8.0.min.js"></script>
    
    <script>
        var modules = null;
        var proceed = null;

        var load_and_proceed = function () {
            var load_modules = function () {
                $.ajax({
                    url: "v8/Prelude/Modules.js",
                    success: function (data, status) {
                        modules = eval(data);
                        if (proceed) {
                            debugger;
                            proceed();
                        }
                    },
                    error: function (xhr, desc, err) {
                        alert("Failed to load Modules.js: " + desc);
                    }
                });
            };
            load_modules();
        };

        proceed = function () {
            debugger;
            function w(data) {
                document.getElementById("text").innerHTML += "<li>" + data + "</li>";
            };

            var $log = function (msg) { document.write("log: " + msg + " "); };
            
            var $load_module = function (module_name) {
                w("load_module: " + module_name + " ");
                if (module_name == "Modules") {
                    debugger;
                    return modules1;
                }
                if (module_name == "Projections") {
                    return projections;
                }
                throw "Module not not found exception: " + module_name;
            };

            var handlers = {};

            var $on = function (name, handler) { w(name); handlers[name] = handler; };
            var $notify = function () { w("notify"); };
            
            $.getScript("v8/Prelude/1Prelude.js");
            $.getScript("v8/Prelude/Projections.js");

            $.ajaxSetup({ cache: false });

            var process = function (streamId, startingSequenceNumber, callback) {
                debugger;
                w("Load data");
                var url_prefix = "http://127.0.0.1:2113/streams/";

                var finished = false;
                var load_next_event = function (sequenceNumber) {
                    var url = url_prefix + streamId + "/event/" + sequenceNumber + "?format=json";
                    $.getJSON(url)
                        .done(function (data) {
                            callback(data);
                            if (!finished) {
                                load_next_event(sequenceNumber + 1);
                            }
                        })
                        .fail(function (jqXHR, status, error) {
                            if (jqXHR.status == 404) {
                                finished = true;
                            }
                            else {
                                finished = true;
                                w("Error occured: " + error);
                            }
                        });
                };
                load_next_event(startingSequenceNumber);
                w("Done.");
            };

            // ---------------------------------------------------------

            var global = scope($on, $notify);
            for (pr in global) {
                window[pr] = global[pr];
            }

            /*
            var projectionAllRaw = function () {
            fromAll();
            on_raw(function (state, event) {
            if (state.count === undefined) { state.count = 0; }
            if (state.sumA === undefined) { state.sumA = 0; }

            state.count = state.count + 1;
            w(state.count);

            var eventBody = JSON.parse(event.bodyRaw);
            state.sumA += eventBody.a;
            w(state.sumA);

            return state;
            });
            };
            */

            debugger;
            var projectionStreamAny = function () {
                fromStream("AdvBankAccount");
                on_any(function (state, event) {
                    if (event.eventType != "EventStore.Client.Commands.DvuBasic.AccountCredited") {
                        return state;
                    }
                    var eventBody = JSON.parse(event.bodyRaw);

                    if (state.count === undefined) { state.count = 0; }
                    if (state.total === undefined) { state.total = 0; }

                    state.count = state.count + 1;
                    w(state.count);

                    state.total += eventBody.creditedAmount;
                    w(state.total);

                    return state;
                });
            };

            //projectionAllRaw();
            projectionStreamAny();

            w(handlers.get_sources());

            w("begin");

            handlers.initialize();

            debugger;
            process("AdvBankAccount", 0, function (event) {
                var parsedEvent = event;

                handlers.process_event(parsedEvent.data,
                    parsedEvent.eventStreamId,
                    parsedEvent.eventType,
                    parsedEvent.eventNumber,
                    parsedEvent.metadata);
            });

            w("state:");
            w(handlers.get_state());

        };
        
    </script>
    <script src="v8/Prelude/1Prelude.js"></script>
    <script src="v8/Prelude/Projections.js"></script>
    <script>
        load_and_proceed();
    </script>
</body>
</html>
